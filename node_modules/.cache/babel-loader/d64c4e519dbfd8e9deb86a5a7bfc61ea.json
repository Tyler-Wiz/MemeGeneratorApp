{"ast":null,"code":"var _jsxFileName = \"/Users/tylerhome/Desktop/Dev/memegenerator/src/Component/MemeGenerator.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MemeGenerator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: '',\n      bottomText: '',\n      randomImage: 'http://i.imgflip.com/1bij.jpg',\n      allMemeImgs: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    const res = await fetch('https://api.imgflip.com/get_memes');\n    const pack = await res.json();\n    const {\n      memes\n    } = pack.data;\n    this.setState({\n      allMemeImgs: memes\n    });\n  }\n\n  handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const randMemeImg = this.state.allMemeImgs[Math.floor(Math.random() * this.state.allMemeImgs.length)];\n    this.setState({\n      randomImage: randMemeImg.url\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.topText,\n          name: \"topText\",\n          placeholder: \"Top text here\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.bottomText,\n          name: \"bottomText\",\n          placeholder: \"Top text here\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Gen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.randomImage,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"top_text\",\n          children: this.state.topText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"bottom_text\",\n          children: this.state.bottomText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MemeGenerator;","map":{"version":3,"sources":["/Users/tylerhome/Desktop/Dev/memegenerator/src/Component/MemeGenerator.jsx"],"names":["React","Component","MemeGenerator","constructor","state","topText","bottomText","randomImage","allMemeImgs","handleChange","bind","handleSubmit","componentDidMount","res","fetch","pack","json","memes","data","setState","e","name","value","target","preventDefault","randMemeImg","Math","floor","random","length","url","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass MemeGenerator extends Component{\n   constructor(){\n       super()\n       this.state = {\n             topText:'',\n             bottomText:'',\n             randomImage:'http://i.imgflip.com/1bij.jpg',\n             allMemeImgs:[]\n             \n       }\n       this.handleChange = this.handleChange.bind(this)\n       this.handleSubmit = this.handleSubmit.bind(this)\n   }\n\n   async componentDidMount(){\n         const res = await fetch('https://api.imgflip.com/get_memes')\n         const pack = await res.json()\n         const {memes} = pack.data\n         this.setState({\n            allMemeImgs:memes\n         })\n   }\n\n   handleChange(e){\n       const {name, value} = e.target\n       this.setState({\n           [name]:value\n       })\n   }\n\n   handleSubmit(e){\n       e.preventDefault()\n       const randMemeImg = this.state.allMemeImgs[Math.floor(Math.random() * this.state.allMemeImgs.length)]\n       this.setState({\n        randomImage: randMemeImg.url\n       })\n   }\n\n \n    render() {\n        return(\n            <div>\n               <form className=\"form\"  onSubmit={this.handleSubmit}>  \n                   <input \n                      type=\"text\"\n                      value={this.state.topText}\n                      name=\"topText\"\n                      placeholder='Top text here'\n                      onChange={this.handleChange}\n                   />\n                   <br />\n                   <input \n                      type=\"text\"\n                      value={this.state.bottomText}\n                      name=\"bottomText\"\n                      placeholder='Top text here'\n                      onChange={this.handleChange}\n                   />\n                   <br />\n                   <button>Gen</button>\n               </form>\n               \n               <div className=\"\">\n                    <img src={this.state.randomImage} alt=\"\" />\n                    <h2 className='top_text'>{this.state.topText}</h2>\n                    <h2 className='bottom_text'>{this.state.bottomText}</h2>\n                </div>\n            </div> \n        )\n    }\n}\n\nexport default MemeGenerator"]},"metadata":{},"sourceType":"module"}